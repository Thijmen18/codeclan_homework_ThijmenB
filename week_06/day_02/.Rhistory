library(tidyverse)
phones <- read_csv("data/20190928-items.csv")
phones <- read_csv("data/20190928-items.csv") %>%
janitor::clean_names()
library(skimr)
skim(phones)
head(phones)
skim(phones)
head(phones)
phones %>%
ggplot() +
aes(x = rating) +
geom_histogram()
phones %>%
ggplot() +
aes(x = rating) +
geom_histogram(col = "white")
head(phones)
skim(phones)
phones %>%
ggplot() +
aes(x = rating) +
geom_histogram(col = "white")
head(phones)
phones %>%
select(brand) %>%
group_by(brand) %>%
summarise(total_phones = sum(brand))
phones %>%
select(brand) %>%
group_by(brand) %>%
summarise(total_phones = count(brand))
phones %>%
select(brand) %>%
group_by(brand) %>%
summarise(total_phones = n())
phones %>%
select(brand) %>%
group_by(brand) %>%
summarise(total_phones = n()) %>%
arrange()
phones %>%
select(brand) %>%
group_by(brand) %>%
summarise(total_phones = n()) %>%
arrange(total_phones)
phones %>%
select(brand) %>%
group_by(brand) %>%
summarise(total_phones = n()) %>%
arrange(desc(total_phones))
phones %>%
filter(brand == "Samsung") %>%
ggplot() +
aes(x = rating) +
geom_histogram()
phone_stats <- phones %>%
filter(brand == "Samsung") %>%
summarise(
num = n(),
mean = mean(rating),
sd = sd(rating)
)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = after_stat(density)),
col = "white") +
stat_function(
fun = dnorm,
args = list(
mean = phone_stats$mean,
sd = phone_stats$sd
),
col = "red"
)
# Mean of Samsung rating:
phone_stats$mean
# sd of Samsung rating:
phone_stats$sd
# total samsung ratings:
phones %>%
filter(brand == "Samsung") %>%
nrow()
# get all ratings 1SD of the mean:
one_sd <- phones %>%
filter(brand == "Samsung") %>%
filter(rating >= 3.5733 - 0.6847859) %>%
filter(rating <= 3.5733 + 0.6847859) %>%
summarise(proportion_in_1sd = n() / 397)
# get all ratings 1SD of the mean:
#one_sd <-
phones %>%
filter(brand == "Samsung") %>%
filter(rating >= 3.5733 - 0.6847859) %>%
filter(rating <= 3.5733 + 0.6847859) %>%
summarise(proportion_in_1sd = n() / 397)
# get all ratings 2SD of the mean:
phones %>%
filter(brand == "Samsung") %>%
filter(rating >= 3.5733 - (2*0.6847859)) %>%
filter(rating <= 3.5733 + (2*0.6847859)) %>%
summarise(proportion_in_1sd = n() / 397)
# get all ratings 3sd of the mean:
phones %>%
filter(brand == "Samsung") %>%
filter(rating >= 3.5733 - (3*0.6847859)) %>%
filter(rating <= 3.5733 + (3*0.6847859)) %>%
summarise(proportion_in_1sd = n() / 397)
# 3 sd:
pnorm(3) - pnorm(-3)
# 2 sd:
pnorm(2) - pnorm(-2)
# Expected proportions of a normal distribution are:
#1sd:
pnorm(1) - pnorm(-1)
phones %>%
filter(brand == "Samsung") %>%
qqnorm()
?qqnorm
phones %>%
filter(brand == "Samsung") %>%
qqplot()
library(tidyverse)
library(tidyverse)
library(skimr)
phones <- read_csv("data/20190928-items.csv") %>%
janitor::clean_names()
# first just a histogram
phones %>%
filter(brand == "Samsung") %>%
ggplot() +
aes(x = rating) +
geom_histogram()
#calculate sd, and mean:
phone_stats <- phones %>%
filter(brand == "Samsung") %>%
summarise(
num = n(),
mean = mean(rating),
sd = sd(rating)
)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = after_stat(density)),
col = "white") +
stat_function(
fun = dnorm,
args = list(
mean = phone_stats$mean,
sd = phone_stats$sd
),
col = "red"
)
phones %>%
filter(brand == "Samsung") %>%
qqplot(rating)
phones %>%
filter(brand == "Samsung") %>%
qqnorm(rating)
samsung_ratings <- phones %>%
filter(brand == "Samsung") %>%
select(rating)
View(samsung_ratings)
#qqnorm
qqnorm(samsung_ratings$rating)
qqline(samsung_ratings$rating)
#qqnorm
qqnorm(samsung_ratings$rating)
qqline(samsung_ratings$rating)
#qqnorm
qqnorm(samsung_ratings$rating)
library(car)
install.packages("car")
library(car)
qqPlot(samsung_ratings$rating)
qqnorm(samsung_ratings$rating)
qqline(rnorm(n = 1000, mean = mean(samsung_ratings$rating), sd = sd(samsung_ratings$rating)))
qqnorm(samsung_ratings$rating)
qqline(samsung_ratings$rating)
qqnorm(samsung_ratings$rating)
#here we create the line of 1000 created datapoints using the mean and sd of the samsung phones
qqline(rnorm(n = 1000, mean = mean(samsung_ratings$rating), sd = sd(samsung_ratings$rating)))
qqnorm(samsung_ratings$rating)
qqline(samsung_ratings$rating)
qqnorm(samsung_ratings$rating)
#here we create the line of 1000 created datapoints using the mean and sd of the samsung phones
qqline(rnorm(n = 1000, mean = mean(samsung_ratings$rating), sd = sd(samsung_ratings$rating)))
qqPlot(samsung_ratings$rating)
qqnorm(samsung_ratings$rating)
qqline(samsung_ratings$rating)
qqnorm(samsung_ratings$rating)
qqline(samsung_ratings$rating)
qqnorm(samsung_ratings$rating)
#here we create the line of 1000 created datapoints using the mean and sd of the samsung phones
qqline(rnorm(n = 1000, mean = mean(samsung_ratings$rating), sd = sd(samsung_ratings$rating)))
qqPlot(samsung_ratings$rating)
qqnorm(samsung_ratings$rating)
qqline(samsung_ratings$rating)
