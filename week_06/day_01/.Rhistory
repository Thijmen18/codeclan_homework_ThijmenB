library(tidyverse)
library(tidyverse)
library(gtools)
tit <- read_csv("data/titanic.csv")
head(tit)
# lets change the data so its easier to calculate
tit %>%
distinct(class)
head(tit)
# lets change the data so its easier to calculate
tit %>%
distinct(class)
tit %>%
select(class, survived) %>%
mutate(crew, class %in% c("engineering crew", "victualling crew", "restaurant staff", "deck crew"))
tit %>%
select(class, survived) %>%
mutate(crew = class %in% c("engineering crew", "victualling crew", "restaurant staff", "deck crew"))
# confirming with dplyr
cb %>%
filter(bio_sex == "female", cblind == TRUE) %>%
summarise(p = n()/nrow(cb))
#prob(survived and crew)
crew_tit %>%
filter(survived == "yes", crew == TRUE) %>%
summarise(p = n()/nrow(crew_tit))
crew_tit <- tit %>%
select(class, survived) %>%
mutate(crew = class %in% c("engineering crew", "victualling crew", "restaurant staff", "deck crew"))
#prob(survived and crew)
crew_tit %>%
filter(survived == "yes", crew == TRUE) %>%
summarise(p = n()/nrow(crew_tit))
#prob(crew)
crew_tit %>%
filter(crew == TRUE) %>%
summarise(p = n()/nrow(crew_tit))
#prob(crew)
crew_tit %>%
filter(crew == TRUE) #%>%
prob_survived_crew <- 0.09560489 / 0.4032623
prob_survived_crew # prob(survived ∣ crew)
#----prob(survived∣passenger)------
#prob(survived and passenger)
crew_tit %>%
filter(survived == "yes", crew == FALSE) %>%
summarise(p = n()/nrow(crew_tit))
#prob(passenger)
crew_tit %>%
filter(crew == FALSE) %>%
summarise(p = n()/nrow(crew_tit))
prob_survived_passenger <- 0.2265519 / 0.5967377
prob_survived_passenger #prob(survived∣passenger) =
crew_tit %>%
tabyl(survived, crew)
# you could also have used the contingency table:
library(janitor)
crew_tit %>%
tabyl(survived, crew)
crew_tit %>%
tabyl(survived, crew) %>%
adorn_totals(where = c("row", "col")) %>%
adorn_percentages(denominator = "all")
source("prob.R")
source("prob.R")
(1/6)^4
(1/6)
(0.1666667)^4
(1/6)^4
rolldie(3, 6)
rolldie(3, 6) %>%
nrow()
rolldie(3, 6) #%>%
rolldie(4, 6) %>%
mutate(total = X1+X2+X3) %>%
filter(total == 5 | 6 | 7)
rolldie(4, 6) %>%
mutate(total = X1+X2+X3) %>%
filter(total == 5, total == 6, total == 7)
rolldie(4, 6) %>%
mutate(total = X1+X2+X3) %>%
filter(total == 5 | total == 6 | total == 7)
rolldie(4, 6) %>%
mutate(total = X1+X2+X3) %>%
filter(total == 5 | total == 6 | total == 7) %>%
nrow()
# probability of this event is:
rolldie(4, 6) %>%
summarise(p = n()/186)
# probability of this event is:
rolldie(4, 6) %>%
summarise(p = 186/n())
?factorial
# So here:
# 5*4*3*2*1/ (5*4*3*2*1 - 5*4*3*2*1) = 5*4*3*2*1
# answer:
5*4*3*2*1
# In total there are 120 different possibilities
permutations(5, r = 5,
v = candidates,
repeats.allowed = FALSE)
# In total there are 120 different possibilities
permutations(5, r = 5,
repeats.allowed = FALSE)
# In total there are 120 different possibilities
permutations(5, r = 5, repeats.allowed = FALSE) %>%
nrow()
# So here:
# 5*4*3*2*1/ (5*4*3*2*1 - 5*4*3*2*1) = 5*4*3*2*1/5*4*3*2*1 = 1
# answer:
1/120
rolldie(6, 6) %>%
nrow()
# all dice on order (only one occurance) =
1/46656
# all dice on order (no particular occurance) =
(1/6)^6
rolldie(6, 6) #%>%
rolldie(6, 6) %>%
nrow() # 46656
# all dice on order (only one occurance) =
1/46656 #= p = 2.143347e-05
# all dice on order (no particular occurance) =
(1/6)^6
# all dice on order (only one occurance) = a permutation
# p = N! / (N - r)!
# (6*5*4*3*2*1) / ((6*5*4*3*2*1)-((6*5*4*3*2*1))
(6*5*4*3*2*1) / ((6*5*4*3*2*1)-((6*5*4*3*2*1))
# all dice on order (only one occurance) = a permutation
# p = N! / (N - r)!
# (6*5*4*3*2*1) / ((6*5*4*3*2*1)-((6*5*4*3*2*1))
((6*5*4*3*2*1) / ((6*5*4*3*2*1)-((6*5*4*3*2*1)))
5*4*3*2*1
5*4*3*2*1
# all dice on order (no particular occurance) =
#total_n_combinations = N! / ((N - r)! * r!) =
n_outcomes <- combinations(50, 6) %>%
nrow()
# all dice on order (no particular occurance) =
#total_n_combinations = N! / ((N - r)! * r!) =
n_outcomes <- combinations(6, 6) %>%
nrow()
n_outcomes
# all dice on order (no particular occurance) =
#total_n_combinations = N! / ((N - r)! * r!) =
n_outcomes <- permutations(6, 6) %>%
nrow()
n_outcomes
# permutations ()
permutations(6, r = 6, repeats.allowed = FALSE)
# permutations ()
permutations(6, r = 6, repeats.allowed = FALSE) %>%
nrow()
# combinations ()
combinations(6, 6, repeats.allowed = FALSE) %>%
nrow()
# 720
# 720/46656 =
720/46656
13/26
(6/6)*(5/6)*(4/6)*(3/6)*(2/6)*(1/6)
#Based on answers, stupid mistake:
4/6
rolldie(4, 6) %>%
mutate(total = X1+X2+X3) %>%
filter(total %in% c(5, 6, 7)) %>%
nrow()
source("prob.R")
library(tidyverse)
library(tidyverse)
library(gtools)
rolldie(4, 6) %>%
mutate(total = X1+X2+X3) %>%
filter(total %in% c(5, 6, 7)) %>%
nrow()
rolldie(4, 6) %>%
mutate(total = X1+X2+X3) #%>%
rolldie(4, 6) %>%
mutate(total = X1+X2+X3+X4) %>%
filter(total == 5 | total == 6 | total == 7) %>%
nrow()
# probability of this event is:
rolldie(4, 6) %>%
summarise(p = 34/n())
