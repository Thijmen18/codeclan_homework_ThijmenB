library(tidyverse)
library(rpart)
library(rpart.plot)
library(tidyverse)
library(tidyverse)
titanic_set <- read_csv('data/titanic_decision_tree_data.csv')
shuffle_index <- sample(1:nrow(titanic_set))
# shuffle the data so class order isn't in order - need this for training/testing split later on
titanic_set <- titanic_set[shuffle_index, ]
titanic_set
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-X1, -passenger_id, -name, -ticket, -fare, -cabin)
titanic_set
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-x1, -passenger_id, -name, -ticket, -fare, -cabin)
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-1, -passenger_id, -name, -ticket, -fare, -cabin)
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-"1", -passenger_id, -name, -ticket, -fare, -cabin)
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-...1, -passenger_id, -name, -ticket, -fare, -cabin)
titanic_tidy
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-...1, -passenger_id, -name, -ticket, -fare, -cabin, -age)
titanic_tidy
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived_flag = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-...1, -passenger_id, -name, -ticket, -fare, -cabin, -age)
titanic_tidy
#cleaning
titanic_tidy <- titanic_set %>%
filter(!is.na(survived)) %>%
mutate(sex = as_factor(sex),
survived_flag = as_factor(if_else(survived == 1, TRUE, FALSE)),
pclass = as_factor(pclass),
embarked = as_factor(embarked)) %>%
mutate(age_status = as_factor(if_else(age > 16, "adult", "child"))) %>%
filter(!is.na(age_status)) %>%
select(-...1, -passenger_id, -name, -ticket, -fare, -cabin, -age, -survived)
titanic_tidy %>%
ggpairs
titanic_tidy %>%
ggpairs()
?ggpairs
library(GGally)
titanic_tidy %>%
ggpairs()
titanic_tidy %>%
ggpairs()
titanic_tidy %>%
ggplot() +
aes(x = pclass, y = survived_flag) +
geom_boxplot()
titanic_tidy %>%
ggplot() +
aes(x = pclass, y = survived_flag) +
geom_histogram()
# how many rows in total
n_data <- nrow(titanic_tidy)
n_data
proportion <- 0.2
# create a test sample index
test_index <- sample(1:n_data, size = n_data*proportion)
# split the data
titanic_test <- slice(titanic_tidy, test_index)
titanic_train <- slice(titanic_tidy, -test_index)
titanic_test %>%
janitor::tabyl(survived_flag)
titanic_train %>%
janitor::tabyl(survived_flag)
titanic_test %>%
janitor::tabyl(survived_flag)
titanic_train %>%
janitor::tabyl(survived_flag)
# 1. make a tree model
titanic_fit <- rpart(
formula = survived_flag ~ ., # include all variables
data = titanic_train,
method = "class" # 'class' for a categorical predictor
)
# 2. plot tree model
rpart.plot(titanic_fit,
yesno = 2, # this writes y/n  at all splits
type = 2, # dictates where our conditions lie at each node
fallen.leaves = TRUE, # True means leaves all aligned at bottom
faclen = 6, # length of factor names
digits = 2, # how many decimal places is prob reported to
split.border.col = 1 # colour of border factor names
)
titanic_tidy %>%
group_by(survived_flag) %>%
summary(total = sum(survived_flag))
library(modelr)
# add the predictions
titanic_test_pred <- titanic_test %>%
add_predictions(titanic_fit, type = "class")
# confusion matrix
library(yardstick)
conf_mat <- titanic_test_pred %>%
conf_mat(truth = surviived_flag,
estimate = pred)
conf_mat <- titanic_test_pred %>%
conf_mat(truth = survived_flag,
estimate = pred)
conf_mat
sensitivity <- titanic_test_pred %>%
sensitivity(truth = survived_flag, estimate = pred)
sensitivity
specificity <- titanic_test_pred %>%
specificity(truth = survived_flag, estimate = pred)
specificity
