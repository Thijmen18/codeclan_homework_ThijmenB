library(tidyverse)
wine <- read_csv(wine_ratings.csv)
wine <- read_csv("data/wine_ratings.csv")
names(wine)
dims(wine)
dim(wine)
glimpse(wine)
head(wine)
is.na(wine)
wine_subset <- wine %>%
select(title, taster_name, points, price, country)
wine_subset <- wine %>%
select(title, taster_name, points, price, country) %>%
drop_na()
# Check if correct:
wine_subset %>%
summarise(across(.fns = ~sum(is.na(.x))))
?across
wine_subset %>%
slice_max(points, n = 5)
wine_subset
library(tidyverse)
wine <- read_csv("data/wine_ratings.csv")
wine_subset <- wine %>%
select(title, taster_name, points, price, country) %>%
drop_na()
wine_subset
wine_subset %>%
group_by(country)
wine_subset %>%
group_by(country) %>%
summarise(mean(points))
wine_subset %>%
group_by(country) %>%
summarise(mean_country = mean(points))
wine_subset %>%
group_by(country) %>%
summarise(mean_country = mean(points)) %>%
slice_max(mean_country)
wine_subset %>%
group_by(country) %>%
summarise(mean_country = mean(points)) %>%
slice_max(mean_country, n=5)
wine_subset %>%
group_by(country) %>%
summarise(mean_country = mean(points)) %>%
slice_min(mean_country, n=5)
wine_subset %>%
group_by(country) %>%
summarise(median_country = median(points)) %>%
slice_max(median_country, n=5)
wine_subset %>%
group_by(country) %>%
summarise(median_country = median(points)) %>%
slice_min(median_country, n=5)
wine_subset %>%
group_by(country) %>%
summarise(mean_country = mean(points)) %>%
slice_min(mean_country, n=5)
wine_subset %>%
group_by(country) %>%
summarise(median_country = median(points)) %>%
slice_min(median_country, n=5)
wine_subset %>%
group_by(country) %>%
summarise(mean_country = mean(points)) %>%
slice_min(mean_country, n=5)
wine_subset %>%
group_by(country) %>%
summarise(median_country = median(points)) %>%
slice_min(median_country, n=5)
wine_subset
taster_sample <- wine_subset %>%
distinct(taster_name) %>%
sample_n(n=5)
library(tidyverse)
taster_sample <- wine_subset %>%
distinct(taster_name) %>%
sample_n(n = 5)
taster_sample <- wine_subset %>%
distinct(taster_name) %>%
sample_n(size = 5)
taster_sample
#lets check how the vector is saved
typeof(taster_sample)
#lets check how the vector is saved
class(taster_sample)
#lets check how the vector is saved
glimpse(taster_sample)
class(taster_sample)
typeof(taster_sample)
?sample_frac
country_sample <- wine_subset %>%
distinct(country) %>%
sample_frac(n = 10)
country_sample
country_sample <- wine_subset %>%
distinct(country) %>%
#  sample_frac(n = 10) sample_frac is being 'retired' recommended to use slice_sample instead!
sample_frac(size = 10, replace = FALSE)
country_sample <- wine_subset %>%
distinct(country) %>%
#  sample_frac(n = 10) sample_frac is being 'retired' recommended to use slice_sample instead!
sample_frac(size = 10, replace = FALSE)
country_sample <- wine_subset %>%
distinct(country) %>%
#  sample_frac(n = 10) sample_frac is being 'retired' recommended to use slice_sample instead!
sample_frac(size = 10, replace = TRUE)
country_sample
wine_subset %>%
distinct(country) %>%
#  sample_frac(n = 10) sample_frac is being 'retired' recommended to use slice_sample instead!
sample_frac(size = 10, replace = TRUE)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
group_by(country)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
select(country)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
count(country)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
select(country) %>%
count(country)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
summarise(country)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
summarise(n_country = sum(country))
?count
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
count(country)
#So 32 countries listed
#We only want 10 for sample_frac so we calculate:
32/10
#So 32 countries listed
#We only want 10 for sample_frac so we calculate:
10/32 #3.2
country_sample <-  wine_subset %>%
distinct(country) %>%
sample_frac(size = 0.3125, replace = FALSE)
country_sample
country_sample <-  wine_subset %>%
distinct(country) %>%
sample_frac(size = 0.3125, replace = FALSE) %>%
pull()
country_sample
taster_sample <- wine_subset %>%
distinct(taster_name) %>%
sample_n(size = 5) %>%
pull()
taster_sample <- wine_subset %>%
distinct(taster_name) %>%
sample_n(size = 5) %>%
pull()
country_sample <-  wine_subset %>%
distinct(country) %>%
sample_frac(size = 0.3125, replace = FALSE) %>%
pull()
country_sample
?filter
#wine_sample <-
wine_subset %>%
filter(taster_sample)
?filter
wine_subset
#wine_sample <-
wine_subset %>%
filter(taster_name = taster_sample)
#wine_sample <-
wine_subset %>%
filter(taster_name == taster_sample)
#wine_sample <-
wine_subset %>%
filter(taster_name == taster_sample & country == country_sample)
wine_subset
#wine_sample <-
wine_subset %>%
filter(taster_name == taster_sample & country == country_sample)
wine_subset
wine_sample <- wine_subset %>%
filter(taster_name == taster_sample &
country == country_sample
)
wine_sample <- wine_subset %>%
filter(taster_name == taster_sample &
country == country_sample
)
wine_sample <- wine_subset %>%
filter(taster_name == taster_sample &
country == country_sample
)
wine_sample <- wine_subset %>%
filter(taster_name %in% taster_sample &
country %in% country_sample
)
wine_sample <- wine_subset %>%
filter(taster_name %in% taster_sample &
country %in% country_sample
)
# let's check if done correctly:
wine_subset
# let's check if done correctly:
wine_subset %>%
distinct(country)
# let's check if done correctly:
wine_sample %>%
distinct(country)
# let's check if done correctly:
wine_sample %>%
count(distinct(country))
# let's check if done correctly:
wine_sample %>%
distinct(country) %>%
nrow()
wine_sample %>%
distinct(taster_name) %>%
nrow() #5, correct!
wine_sample <- wine_subset %>%
filter(taster_name %in% taster_sample &
country %in% country_sample
)
wine_sample %>%
distinct(taster_name) %>%
nrow() #5, correct!
wine_sample <- wine_subset %>%
filter(taster_name %in% taster_sample,
country %in% country_sample
)
# let's check if done correctly:
wine_sample %>%
distinct(country) %>%
nrow() #5, correct!
wine_sample %>%
distinct(taster_name) %>%
nrow() #3, suspicious, but maybe only 3 tasters tasted wine from our subsample
wine_sample
average_rating_taster <- wine %>%
group_by(taster_name) %>%
summarise(taster_mean_points = mean(points))
average_rating_taster
wine_sample %>%
mutate(difference_from_avg = points - average_rating_taster)
average_rating_taster
wine_sample %>%
mutate(difference_from_avg = points - average_rating_taster$taster_mean_points)
average_rating_taster
wine_sample %>%
mutate(difference_from_avg = points - average_rating_taster$taster_mean_points)
average_rating_taster <- wine %>%
group_by(taster_name) %>%
summarise(taster_mean_points = mean(points))
average_rating_taster
wine_sample %>%
group_by(taster_name) %>%
mutate(average_points = mean(points))
wine_sample %>%
group_by(taster_name) %>%
mutate(average_points = mean(points)) %>%
mutate(difference_from_avg = points - average_points) %>%
arrange()
wine_sample %>%
group_by(taster_name) %>%
mutate(average_points = mean(points)) %>%
mutate(difference_from_avg = points - average_points) %>%
arrange(difference_from_avg)
wine_sample %>%
group_by(taster_name) %>%
mutate(average_points = mean(points)) %>%
mutate(difference_from_avg = points - average_points) %>%
arrange(desc(difference_from_avg)
)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
distinct(country)
#  sample_frac(n = 10) sample_frac takes a fraction of rows to select.
# So lets first check how many countries there are listed
wine_subset %>%
distinct(country) %>%
nrow()
