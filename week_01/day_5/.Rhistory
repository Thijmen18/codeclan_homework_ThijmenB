nrow()
# first lets count and drop all books with ratings_count 0
books %>%
select(ratings_count) %>%
filter(ratings_count == 0) # %>%
nrow() # 80! Lets drop these
# first lets count and drop all books with ratings_count 0
books %>%
select(ratings_count) %>%
filter(ratings_count == 0) # %>%
# first lets count and drop all books with ratings_count 0
books %>%
# select(ratings_count) %>%
filter(ratings_count == 0) # %>%
books_min1_rating <- books %>%
select(title, authors, average_rating, ratings_count, text_reviews_count, publisher) %>%
filter(ratings_count > 0)
books_min1_rating <- books %>%
select(title, authors, language_code, average_rating, ratings_count, text_reviews_count, publisher) %>%
filter(ratings_count > 0)
books_min1_rating
#lets check how many language groups exist
books_min1_rating %>%
group_by(language_code)
#lets check how many language groups exist, and how many books are listed per group
books_min1_rating %>%
mutate(count = 1,
.after = language_code) #%>%
mutate(count = 1,
.after = language_code) #%>%
#lets check how many language groups exist, and how many books are listed per group
books_min1_rating %>%
select(language_code, average_rating, ratings_count, text_reviews_count) %>%
mutate(count = 1,
.after = language_code) #%>%
#lets check how many language groups exist, and how many books are listed per group
books_min1_rating %>%
select(language_code, average_rating, ratings_count, text_reviews_count) %>%
mutate(count = 1,
.after = language_code) %>%
group_by(language_code) %>%
summarise(total_books_per_language = sum(count))
# 4 different codes exist for english, lets minimise that to a single code
books_min1_rating %>%
select(language_code, average_rating, ratings_count, text_reviews_count) %>%
mutate(
language_code = recode(
language_code,
"en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng"
)
) %>%
mutate(count = 1,
.after = language_code) %>%
group_by(language_code) %>%
summarise(total_books_per_language = sum(count))
# 4 different codes exist for english, lets minimise that to a single code and save the
# overview to a variable
totalbooks_language <- books_min1_rating %>%
select(language_code, average_rating, ratings_count, text_reviews_count) %>%
mutate(
language_code = recode(
language_code,
"en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng"
)
) %>%
mutate(count = 1,
.after = language_code) %>%
group_by(language_code) %>%
summarise(total_books_per_language = sum(count))
# Let's now count the percentage of books per language of the total
totalbooks_language %>%
summarise(sum(total_books_per_language))
# 4 different codes exist for english, lets minimise that to a single code and save the
# overview to a variable
totalbooks_language <- books_min1_rating %>%
select(language_code, average_rating, ratings_count, text_reviews_count) %>%
mutate(
language_code = recode(
language_code,
"en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng"
)
) %>%
mutate(count = 1,
.after = language_code) %>%
group_by(language_code) %>%
summarise(total_books_per_language = sum(count))
totalbooks_language
# Let's now count the percentage of books per language of the total
totalbooks_language %>%
summarise(sum(total_books_per_language))
# Let's now count the percentage of books per language of the total
totalbooks <- totalbooks_language %>%
summarise(sum(total_books_per_language)) %>%
pull()
totalbooks_language
totalbooks_language %>%
mutate(percentage_of_total = total_books_per_language/totalbooks*100,
.before total_books_per_language)
totalbooks_language %>%
mutate(percentage_of_total = total_books_per_language/totalbooks*100,
.before = total_books_per_language)
totalbooks_language %>%
mutate(percentage_of_total = total_books_per_language/totalbooks*100,
.before = total_books_per_language) %>%
slice_max(percentage_of_total, n = 5)
# We start again with the
books_min1_rating %>%
select(title, authors, publication_date, average_rating, ratings_count)
books_min1_rating <- books %>%
select(title, authors, language_code, average_rating, ratings_count, publication_date,
text_reviews_count, publisher) %>%
filter(ratings_count > 0)
#lets check how many language groups exist, and how many books are listed per group
books_min1_rating %>%
select(language_code, average_rating, ratings_count, text_reviews_count) %>%
mutate(count = 1,
.after = language_code) %>%
group_by(language_code) %>%
summarise(total_books_per_language = sum(count))
# 4 different codes exist for english, lets minimise that to a single code and save the
# overview to a variable
totalbooks_language <- books_min1_rating %>%
select(language_code, average_rating, ratings_count, text_reviews_count) %>%
mutate(
language_code = recode(
language_code,
"en-CA" = "eng", "en-GB" = "eng", "en-US" = "eng"
)
) %>%
mutate(count = 1,
.after = language_code) %>%
group_by(language_code) %>%
summarise(total_books_per_language = sum(count))
totalbooks_language
# Let's now count the percentage of books per language of the total
totalbooks <- totalbooks_language %>%
summarise(sum(total_books_per_language)) %>%
pull()
totalbooks_language %>%
mutate(percentage_of_total = total_books_per_language/totalbooks*100,
.before = total_books_per_language) %>%
slice_max(percentage_of_total, n = 5)
# We start again with the
books_min1_rating %>%
select(title, authors, publication_date, average_rating, ratings_count)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating)
?mutate
?substr
.before = publication_date)
# lets focus on years only
mutate(year = substr(publication_date, nchar(publication_date-4),
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = substr(publication_date, nchar(publication_date)-4),
.before = publication_date)
# We start again with the min1_rating dataset
books_min1_rating %>%
books_min1_rating
?nchar
# lets focus on years only
mutate(year = substr(publication_date, nchar(publication_date-4+1),
nchar(publication_date)),
# lets focus on years only
mutate(year = substr(publication_date, nchar(publication_date-4+1,
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = substr(publication_date, nchar(publication_date-4+1,
nchar(publication_date)))
)
books_min1_rating
books_min1_rating
library(tidyverse)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y")
)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y",
.before = publication_date)
)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year == <2000 ~ "old",
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
))
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
group_by(age) %>%
summarise(average_rating = mean(average_rating))
arrange(books_min1_rating)
books_min1_rating %>%
arrange(desc(average_rating))
books_min1_rating %>%
arrange(desc(publication_date))
books_min1_rating %>%
arrange(asc(publication_date))
books_min1_rating %>%
arrange((publication_date))
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
arrange(year)
arrange(desc(year)
# We start again with the min1_rating dataset
books_min1_rating %>%
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
arrange(desc(year))
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
filter(year = NA)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
filter(age = NA)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
filter(is.na(year))
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 new
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
books_min25_rating %>% #tibble only including book ratings with minimal rate count of 25
group_by(authors) %>%
summarise(mean_rating = mean(average_rating)) %>%
slice_max(mean_rating, n = 10)
books_min25_rating %>% #tibble only including book ratings with minimal rate count of 25
group_by(authors) %>%
summarise(mean_rating = mean(average_rating))
books_min25_rating %>% #tibble only including book ratings with minimal rate count of 25
group_by(authors) %>%
summarise(mean_rating = mean(average_rating)) %>%
arrange(desc(mean_rating))
books_min1_rating %>% #tibble only including book ratings with minimal rate count of 1
group_by(authors) %>%
summarise(mean_rating = mean(average_rating)) %>%
arrange(desc(mean_rating))
names(books)
names(books_min1_rating) #tibble only including book ratings with minimal rate count of 1
books_min1_rating %>%  #tibble only including book ratings with minimal rate count of 1
select(title, authors, average_rating, ratings_count, text_reviews_count)
# How many text_reviews are witten?
books_min1_rating %>%  #tibble only including book ratings with minimal rate count of 1
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
summarise(total_texts = sum(text_reviews_count))
# How many text_reviews are written, and how many ratings are given?
books_min1_rating %>%  #tibble only including book ratings with minimal rate count of 1
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
summarise(across(text_reviews_count, ratings_count, sum))
books_min1_rating
# How many text_reviews are written, and how many ratings are given?
books_min1_rating %>%  #tibble only including book ratings with minimal rate count of 1
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
summarise(across(where(is.numeric), sum))
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, "TRUE", "FALSE"))
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, "TRUE", "FALSE")) %>%
filter(text_review_presence = FALSE)
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, TRUE, FALSE)) %>%
filter(text_review_presence = TRUE)
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, TRUE, FALSE)) %>%
filter(text_review_presence == TRUE)
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, TRUE, FALSE)) %>%
filter(text_review_presence == TRUE) %>%
summarise(average_rate_with_text = mean(average_rating))
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, TRUE, FALSE)) %>%
filter(text_review_presence == TRUE) %>%
summarise(average_rate_with_text = median(average_rating))
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, TRUE, FALSE)) %>%
filter(text_review_presence == TRUE) %>%
summarise(average_rate_with_text = mean(average_rating))
books_min1_rating %>%
select(title, authors, average_rating, ratings_count, text_reviews_count) %>%
mutate(text_review_presence = if_else(text_reviews_count > 1, TRUE, FALSE)) %>%
group_by(text_review_presence) %>%
# filter(text_review_presence == TRUE) %>%
summarise(average_rate_with_text = mean(average_rating))
books %>%
mutate(average_rating = if_else(authors %in% "J.K. Rowling", 0, average_rating))
?if_else
books %>%
mutate(average_rating = if_else(authors %in% c(J.K. Rowling), 0, average_rating))
books %>%
mutate(average_rating = if_else(authors %in% c("J.K. Rowling"), 0, average_rating))
?str_detect
books %>%
mutate(average_rating = if_else(str_detect("J.K. Rowling"),
0, average_rating)
)
books %>%
mutate(average_rating = if_else(stringr::str_detect("J.K. Rowling"),
0, average_rating)
)
books %>%
mutate(average_rating = if_else(stringr::str_detect(authors, "J.K. Rowling"),
0, average_rating)
)
books %>%
mutate(average_rating = if_else(stringr::str_detect(authors, "J.K. Rowling"),
0, average_rating)
) %>%
group_by(authors) %>%
filter(stringr::str_detect(authors, "J.K. Rowling"))
books %>%
mutate(average_rating = if_else(stringr::str_detect(authors, "J.K. Rowling"),
0, average_rating)
) %>%
group_by(authors) %>%
filter(stringr::str_detect(authors, "J.K. Rowling")) %>%
summarise(average_rating = mean(average_rating))
library(tidyverse)
books <- read_csv("data/books.csv")
books %>%
group_by(language_code)
books %>%
group_by(language_code) %>%
summarise(num_of_books = n())
# or quicker:
books %>%
count(language_code)
arrange(desc(num_of_books))
books %>%
group_by(language_code) %>%
summarise(num_of_books = n()
arrange(desc(num_of_books))
books %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%
arrange(desc(num_of_books))
books %>%
slice_max(average_rating, n = 5)
purged <- books %>%
select(authors)
purged <- books %>%
select(authors) %>%
filter(!authors == "NOT A BOOK")
purged %>%
filter(ratings_count >= 100) %>%
slice_max(average_rating, n = 5)
purged <- books %>%
#select(authors) %>%
filter(!authors == "NOT A BOOK")
purged %>%
filter(ratings_count >= 100) %>%
slice_max(average_rating, n = 5)
books %>%
filter(ratings_count > 1) %>%
select(title, authors, publication_date, average_rating) %>%
mutate(new_pub_date = as.Date(publication_date, "%m/%d/%Y"))
filter(is.na(year))
books %>%
filter(is.na(year))
books %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"),
.after = authors)
books %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"),
.after = authors) %>%
filter(JK == TRUE)
books %>%
select(authors, publication_date, language_code) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"),
.after = authors) %>%
filter(JK == TRUE) %>%
distinct(language_code)
books %>%
select(authors, language_code) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"),
.after = authors) %>%
filter(JK == TRUE) %>%
distinct(language_code)
books %>%
summarise(across(.cols = everything(), .fns =
~sum(is.na(.x)))
)
