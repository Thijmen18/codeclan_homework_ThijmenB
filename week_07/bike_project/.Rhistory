# lets check per season, with (Dec, Jan, Feb = Winter); (Mar, Apr, May = Spring); (Jun, Jul, Aug = Summer); (Sep, Okt, Nov: Autumn)
nyc_bikes_dates %>%
mutate(season = recode(month,
"Jan" = "Winter",
"Feb" = "Winter",
"Mar" = "Spring",
"Apr" = "Spring",
"May" = "Spring",
"Jun" = "Summer",
"Jul" = "Summer",
"Aug" = "Summer",
"Sep" = "Autumn",
"Oct" = "Autumn",
"Nov" = "Autumn",
"Dec" = "Winter")) %>%
index_by(season) %>%
summarise(rental_per_season = n()) %>%
ggplot() +
aes(x = season, y = rental_per_season) +
geom_col(col = "black", fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per season") +
ylab("Total hires\n") +
xlab("\n2018")
nyc_bikes_dates %>%
index_by(weekday) %>%
summarise(rental_per_weekday = n()) %>%
ggplot() +
aes(x = weekday, y = rental_per_weekday) +
geom_col(col = "black", fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per day") +
ylab("Total hires\n") +
xlab("\n2018")
nyc_bikes_dates %>%
mutate(hour = hour(start_time)) %>%
ggplot() +
aes(x = hour) +
geom_bar(col = "black", fill = "#F9A472") +
facet_wrap(~weekday, ncol =4) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per hour per day") +
ylab("Total hires\n") +
xlab("Hour of day")
nyc_bikes_dates %>%
ggplot() +
aes(x = gender, y = after_stat(prop), group = 1) +
geom_bar(fill = "#3182bd") +
xlab("\nGender") +
ylab("Percentage\n") +
ggtitle("Percentage of gender types renting bikes in 2018") +
scale_y_continuous(labels = scales::percent_format()) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
scale_fill_manual(
values = c(
"Unknown" = "#B6A7B5",
"Male" = "#F9A472",
"Female" = "#fff7bc"
))
nyc_bikes_dates %>%
ggplot() +
aes(x = weekday) +
geom_bar(fill = "#3182bd") +
facet_wrap(~ gender) +
xlab("\nDays") +
ylab("Total hires\n") +
ggtitle("Percentage of gender types renting bikes in 2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
ggplot() +
aes(x = age_group, y = after_stat(prop), group = 1) +
geom_bar(fill = "#de2d26") +
xlab("\nAge group") +
ylab("Percentage\n") +
ggtitle("Percentage of age groups renting bikes in 2018") +
scale_y_continuous(labels = scales::percent_format()) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
ggplot() +
aes(x = weekday) +
geom_bar(fill = "#fa9fb5") +
facet_wrap(~ type) +
xlab("\nDays") +
ylab("Total hires\n") +
ggtitle("Percentage of user types renting bikes in 2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
mutate(trip_time = stop_time - start_time) %>%
mutate(time_hours = as.numeric(trip_time, "hours")) %>%
filter(time_hours <= 1) %>%
ggplot() +
aes(x = time_hours) +
geom_histogram(fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Trip length for bike hires less than one hour") +
ylab("Total hires\n") +
xlab("\nTime")
View(nyc_bikes_dates)
nyc_bikes_dates_age %>%
ggplot() +
aes(x = weekday) +
geom_bar(fill = "#fa9fb5", position = "stack") +
facet_wrap(~ type) +
xlab("\nDays") +
ylab("Total hires\n") +
ggtitle("Percentage of user types renting bikes in 2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates %>%
group_by(gender) %>%
summarise(proportion_gender_types = n())
#loading in Libraries
library(tidyverse)
library(tsibble)
library(tsibbledata)
library(skimr)
library(lubridate)
library(ggplot2)
library(leaflet)
#cleaning/wrangling dataset
# add multiple columns to group per time period:
nyc_bikes_dates <- nyc_bikes %>%
mutate(year = year(start_time),
month = month(start_time, label = TRUE, abbr = TRUE),
day = day(start_time),
weekday = wday(start_time, label = TRUE, abbr = TRUE))
# add age groups:
# let's add age to the dataset, and divide per age group
# 0-17, 18-25, 26-35, 35-50, 50-65, 66-up
nyc_bikes_dates_age <- nyc_bikes_dates %>%
mutate(age = 2018 - birth_year) %>%
mutate(age_group = case_when(
age < 18 ~ "0-17",
age >= 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 50 ~ "36-50",
age > 50 & age <= 65 ~ "50-65",
age > 65 ~ "66-up"
))
nyc_bikes_dates %>%
index_by(year) %>%
summarise(total_rentals = n())
leaflet(nyc_bikes) %>%
addTiles() %>%
addCircleMarkers(
lng = ~ start_long,
lat = ~ start_lat,
clusterOptions = markerClusterOptions()
)
nyc_bikes_dates %>%
arrange(start_time) %>%
mutate(trip_accumulative = row_number()) %>%
ggplot() +
aes(x = start_time, y = trip_accumulative, group = ) +
geom_line(col = "springgreen4") +
ggtitle("Total bike hires in 2018") +
ylab("Total hires") +
xlab("Time") +
theme_light()
nyc_bikes_dates %>%
index_by(month) %>%
summarise(rental_per_month = n()) %>%
ggplot() +
aes(x = month, y = rental_per_month) +
geom_col(col = "black", fill = "springgreen4") +
ggtitle("Total bike hires per month") +
ylab("Total hires\n") +
xlab("\n2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
# lets check per season, with (Dec, Jan, Feb = Winter); (Mar, Apr, May = Spring); (Jun, Jul, Aug = Summer); (Sep, Okt, Nov: Autumn)
nyc_bikes_dates %>%
mutate(season = recode(month,
"Jan" = "Winter",
"Feb" = "Winter",
"Mar" = "Spring",
"Apr" = "Spring",
"May" = "Spring",
"Jun" = "Summer",
"Jul" = "Summer",
"Aug" = "Summer",
"Sep" = "Autumn",
"Oct" = "Autumn",
"Nov" = "Autumn",
"Dec" = "Winter")) %>%
index_by(season) %>%
summarise(rental_per_season = n()) %>%
ggplot() +
aes(x = season, y = rental_per_season) +
geom_col(col = "black", fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per season") +
ylab("Total hires\n") +
xlab("\n2018")
nyc_bikes_dates %>%
index_by(weekday) %>%
summarise(rental_per_weekday = n()) %>%
ggplot() +
aes(x = weekday, y = rental_per_weekday) +
geom_col(col = "black", fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per day") +
ylab("Total hires\n") +
xlab("\n2018")
nyc_bikes_dates %>%
mutate(hour = hour(start_time)) %>%
ggplot() +
aes(x = hour) +
geom_bar(col = "black", fill = "#F9A472") +
facet_wrap(~weekday, ncol =4) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per hour per day") +
ylab("Total hires\n") +
xlab("Hour of day")
nyc_bikes_dates %>%
ggplot() +
aes(x = gender, y = after_stat(prop), group = 1) +
geom_bar(fill = "#3182bd") +
xlab("\nGender") +
ylab("Percentage\n") +
ggtitle("Percentage of gender types renting bikes in 2018") +
scale_y_continuous(labels = scales::percent_format()) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
scale_fill_manual(
values = c(
"Unknown" = "#B6A7B5",
"Male" = "#F9A472",
"Female" = "#fff7bc"
))
nyc_bikes_dates %>%
ggplot() +
aes(x = weekday) +
geom_bar(fill = "#3182bd") +
facet_wrap(~ gender) +
xlab("\nDays") +
ylab("Total hires\n") +
ggtitle("Percentage of gender types renting bikes in 2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
ggplot() +
aes(x = age_group, y = after_stat(prop), group = 1) +
geom_bar(fill = "#de2d26") +
xlab("\nAge group") +
ylab("Percentage\n") +
ggtitle("Percentage of age groups renting bikes in 2018") +
scale_y_continuous(labels = scales::percent_format()) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
ggplot() +
aes(x = weekday) +
geom_bar(fill = "#fa9fb5") +
facet_wrap(~ type) +
xlab("\nDays") +
ylab("Total hires\n") +
ggtitle("Percentage of user types renting bikes in 2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
mutate(trip_time = stop_time - start_time) %>%
mutate(time_hours = as.numeric(trip_time, "hours")) %>%
filter(time_hours <= 1) %>%
ggplot() +
aes(x = time_hours) +
geom_histogram(fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Trip length for bike hires less than one hour") +
ylab("Total hires\n") +
xlab("\nTime")
nyc_bikes_dates %>%
group_by(gender) %>%
summarise(proportion_gender_types = n())
# lets create/clean the data by downsampling and summarising bike hires per month
# select the variables we need:
bike_hires_per_month <-  nyc_bikes_dates %>%
index_by(month) %>%
summarise(rentals_per_month = n())
nyc_bikes_dates %>%
index_by(gender) %>%
summarise(proportion_gender_types = n())
nyc_bikes_dates %>%
group_by(gender) %>%
summarise(proportion_gender_types = n())
class(nyc_bikes_dates)
nyc_bikes_dates %>%
select(gender) %>%
group_by(gender) %>%
summarise(proportion_gender_types = n())
gender_calc <- as.tibble(nyc_bikes_dates) #
class(gender_calc)
gender_calc %>%
group_by(gender) %>%
summarise(proportion_gender_types = n())
gender_calc %>%
group_by(gender) %>%
summarise(proportion_gender_types = nrow(gender_calc)/n())
nrow(gender_calc)
gender_calc
nrow(gender_calc)
gender_calc %>%
group_by(gender) %>%
summarise(proportion_gender_types = nrow(gender_calc)/n(gender))
gender_calc %>%
group_by(gender) %>%
summarise(proportion_gender_types = nrow(gender_calc)/n())
summarise(proportion_gender_types = n()/nrow(gender_calc)
gender_calc %>%
gender_calc %>%
group_by(gender) %>%
summarise(proportion_gender_types = n()/nrow(gender_calc))
gender_calc %>%
group_by(gender) %>%
summarise(proportion_gender_types = n()/nrow(gender_calc))
# 2. Preparing data for visualisations/analyses
#loading in Libraries
library(tidyverse)
library(tsibble)
library(tsibbledata)
library(skimr)
library(lubridate)
library(ggplot2)
library(leaflet)
# cleaning/wrangling dataset
# preparing various datasets used for the plots
# 1. add multiple columns to group per time period:
nyc_bikes_dates <- nyc_bikes %>%
mutate(year = year(start_time),
month = month(start_time, label = TRUE, abbr = TRUE),
day = day(start_time),
weekday = wday(start_time, label = TRUE, abbr = TRUE))
# 2. add age groups:
# let's add age to the dataset, and divide per age group
# 0-17, 18-25, 26-35, 35-50, 50-65, 66-up
nyc_bikes_dates_age <- nyc_bikes_dates %>%
mutate(age = 2018 - birth_year) %>%
mutate(age_group = case_when(
age < 18 ~ "0-17",
age >= 18 & age <= 25 ~ "18-25",
age > 25 & age <= 35 ~ "26-35",
age > 35 & age <= 50 ~ "36-50",
age > 50 & age <= 65 ~ "50-65",
age > 65 ~ "66-up"
))
# 3. reformat the tsibble into tibble to get some calculations
gender_calc <- as.tibble(nyc_bikes_dates)
nyc_bikes_dates %>%
index_by(year) %>%
summarise(total_rentals = n())
leaflet(nyc_bikes) %>%
addTiles() %>%
addCircleMarkers(
lng = ~ start_long,
lat = ~ start_lat,
clusterOptions = markerClusterOptions()
)
nyc_bikes_dates %>%
index_by(month) %>%
summarise(rental_per_month = n()) %>%
ggplot() +
aes(x = month, y = rental_per_month) +
geom_col(col = "black", fill = "springgreen4") +
ggtitle("Total bike hires per month") +
ylab("Total hires\n") +
xlab("\n2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
# lets check per season, with (Dec, Jan, Feb = Winter); (Mar, Apr, May = Spring); (Jun, Jul, Aug = Summer); (Sep, Okt, Nov: Autumn)
nyc_bikes_dates %>%
mutate(season = recode(month,
"Jan" = "Winter",
"Feb" = "Winter",
"Mar" = "Spring",
"Apr" = "Spring",
"May" = "Spring",
"Jun" = "Summer",
"Jul" = "Summer",
"Aug" = "Summer",
"Sep" = "Autumn",
"Oct" = "Autumn",
"Nov" = "Autumn",
"Dec" = "Winter")) %>%
index_by(season) %>%
summarise(rental_per_season = n()) %>%
ggplot() +
aes(x = season, y = rental_per_season) +
geom_col(col = "black", fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per season") +
ylab("Total hires\n") +
xlab("\n2018")
nyc_bikes_dates %>%
index_by(weekday) %>%
summarise(rental_per_weekday = n()) %>%
ggplot() +
aes(x = weekday, y = rental_per_weekday) +
geom_col(col = "black", fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per day") +
ylab("Total hires\n") +
xlab("\n2018")
nyc_bikes_dates %>%
mutate(hour = hour(start_time)) %>%
ggplot() +
aes(x = hour) +
geom_bar(col = "black", fill = "#F9A472") +
facet_wrap(~weekday, ncol =4) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Total bike hires per hour per day") +
ylab("Total hires\n") +
xlab("Hour of day")
gender_calc %>%
group_by(gender) %>%
summarise(proportion_gender_types = n()/nrow(gender_calc))
nyc_bikes_dates %>%
ggplot() +
aes(x = weekday) +
geom_bar(fill = "#3182bd") +
facet_wrap(~ gender) +
xlab("\nDays") +
ylab("Total hires\n") +
ggtitle("Percentage of gender types renting bikes in 2018") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
ggplot() +
aes(x = age_group, y = after_stat(prop), group = 1) +
geom_bar(fill = "#de2d26") +
xlab("\nAge group") +
ylab("Percentage\n") +
ggtitle("Percentage of age groups renting bikes in 2018") +
scale_y_continuous(labels = scales::percent_format()) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black"))
nyc_bikes_dates_age %>%
mutate(trip_time = stop_time - start_time) %>%
mutate(time_hours = as.numeric(trip_time, "hours")) %>%
filter(time_hours <= 1) %>%
ggplot() +
aes(x = time_hours) +
geom_histogram(fill = "springgreen4") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(size = 0.3, colour = "black")) +
ggtitle("Trip length for bike hires less than one hour") +
ylab("Total hires\n") +
xlab("\nTime")
