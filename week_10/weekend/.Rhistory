# Same for white:
n_data_white <- nrow(white_wine)
# test index:
test_index_red <- sample(1:n_data_red, size = n_data_red*0.1)
# use test index to create test and train set:
test_red <- slice(red_wine, test_index_red)
train_red <- slice(red_wine, -test_index_red)
test_inde_white <- sample(1:n_data_white, size = n_data_white*0.1)
test_white <- slice(white_wine, test_index_white)
test_index_white <- sample(1:n_data_white, size = n_data_white*0.1)
test_white <- slice(white_wine, test_index_white)
train_white <- slice(white_wine, -test_index_white)
head(train_red)
dim(train_red)
head(train_white)
skim(train_white) %>%
view()
dim(train_white)
red_wine_type <- train_red %>%
mutate(is_red = TRUE) %>%
select(-wine_id)
white_wine_type <- train_white %>%
mutate(is_red = FALSE) %>%
select(-wine_id)
wine_total <-
bind_rows(white_wine_type, red_wine_type) %>%
select(-region)
wine_total
#missing values?
wine_total %>%
summarise(across(.fns = ~sum(is.na(.x))))
# check for aliased variables:
alias(quality ~ ., data = wine_total)
# lets explore ggpairs
ggpairs(wine_total)
# lets explore ggpairs
ggpairs(wine_total)
wine_total_1 <- wine_total %>%
select(fixed_acidity:chlorides, is_red, quality)
wine_total_2 <- wine_total %>%
select(free_sulfur_dioxide:is_red)
ggpairs(wine_total_1)
ggpairs(wine_total_2)
ggpairs(wine_total_2)
?ggpairs
?aes
wine_total_2 %>%
ggpairs(aes(fill = is_red))
wine_total_2 %>%
ggpairs(aes(fill = is_red), alpha = 0.4)
wine_total_2 %>%
ggpairs(aes(fill = is_red), alpha = 0.4, bins = 25)
wine_total_2 %>%
ggpairs(aes(fill = is_red, alpha = 0.4, bins = 25))
wine_total_transform <- wine_total %>%
mutate(ln_residual_sugar = log(residual_sugar),
ln_chlorides = log(chlorides),
ln_total_so2 = log(total_sulfur_dioxide),
ln_free_so2 = log(free_sulfur_dioxide))
wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, quality, is_red) %>%
ggpairs(aes(fill = is_red, alpha = 0.4, bins = 25))
wine_total_transform <- wine_total %>%
mutate(ln_residual_sugar = log(residual_sugar),
ln_chlorides = log(chlorides),
ln_total_so2 = log(total_sulfur_dioxide),
ln_free_so2 = log(free_sulfur_dioxide))
wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, quality, is_red) %>%
ggpairs(aes(fill = is_red, alpha = 0.4, bins = 25))
alias(quality ~ ., data = wine_total_transform)
model_1 <- lm(quality ~ alcohol, wine_total)
autoplot(model_1)
model_1 <- lm(quality ~ alcohol, wine_total)
autoplot(model_1)
library(ggfortify)
autoplot(model_1)
summary(model_1)
library(tidyverse)
library(GGally)
library(modelr)
library(skimr)
library(ggfortify)
red_wine <- read_csv("data/wine_quality_red.csv")
white_wine <- read_csv("data/wine_quality_white.csv")
# first for the red_wine:
#. 1. Total rows:
n_data_red <- nrow(red_wine)
# test index:
test_index_red <- sample(1:n_data_red, size = n_data_red*0.1)
# use test index to create test and train set:
test_red <- slice(red_wine, test_index_red)
train_red <- slice(red_wine, -test_index_red)
# Same for white:
n_data_white <- nrow(white_wine)
test_index_white <- sample(1:n_data_white, size = n_data_white*0.1)
test_white <- slice(white_wine, test_index_white)
train_white <- slice(white_wine, -test_index_white)
# data exploration
head(train_red)
skim(train_red) %>%
view()
dim(train_red)
# 1599   14 - 1440   14
head(train_white)
skim(train_white) %>%
view()
dim(train_white)
# 4898   14 - 4409   14
red_wine_type <- train_red %>%
mutate(is_red = TRUE) %>%
select(-wine_id)
white_wine_type <- train_white %>%
mutate(is_red = FALSE) %>%
select(-wine_id)
#remove region
wine_total <-
bind_rows(white_wine_type, red_wine_type) %>%
select(-region)
wine_total
#missing values?
wine_total %>%
summarise(across(.fns = ~sum(is.na(.x))))
# no missing data!
# check for aliased variables:
alias(quality ~ ., data = wine_total)
# none
# lets explore ggpairs but by splitting variables in two sets
wine_total_1 <- wine_total %>%
select(fixed_acidity:chlorides, is_red, quality)
wine_total_2 <- wine_total %>%
select(free_sulfur_dioxide:is_red)
ggpairs(wine_total_1)
ggpairs(wine_total_2)
wine_total_2 %>%
ggpairs(aes(fill = is_red, alpha = 0.4, bins = 25))
wine_total_transform <- wine_total %>%
mutate(ln_residual_sugar = log(residual_sugar),
ln_chlorides = log(chlorides),
ln_total_so2 = log(total_sulfur_dioxide),
ln_free_so2 = log(free_sulfur_dioxide))
wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, quality, is_red) %>%
ggpairs(aes(fill = is_red, alpha = 0.4, bins = 25))
# we start with highest correlated property: alcohol!
model_1 <- lm(quality ~ alcohol, wine_total)
autoplot(model_1)
# plot 1 (pattern of residuals): look ok, blue line flat on 0, points evenly distributed
# plot 2 (residuals normally distributed): look good, points distributed on line
# plot 3 (homoscedasticity test): points evenly distributed, line flat: ok!
# plot 4: no extreme points causing high leverage
summary(model_1)
# alcohol - significant
# Residual standard error: 0.8415
# Multiple R-squared:  0.1809,	Adjusted R-squared:  0.1807
wine_resid <- wine_total_transform %>%
add_residuals(model_1) %>%
select(-quality)
ggpairs(wine_resid)
# get model residuals and see what variables will help explain remaining variation
# first start with the transformed variables
wine_resid <- wine_total_transform %>%
add_residuals(model_1) %>%
select(-quality)
ggpairs(wine_resid)
# first start with the transformed variables
wine_resid <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, quality, is_red) %>%
add_residuals(model_1) %>%
select(-quality)
# first start with the transformed variables
wine_resid <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, alcohol, quality, is_red) %>%
add_residuals(model_1) %>%
select(-quality)
ggpairs(wine_resid)
# first start with the transformed variables
wine_resid <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, alcohol, quality, is_red) %>%
add_residuals(model_1) %>%
select(-quality, -alcohol)
ggpairs(wine_resid)
wine_resid_2 <- wine_total %>%
add_residuals(model_1) %>%
select(-alcohol, -quality)
ggpairs(wine_resid_2)
wine_resid_2 <- wine_total %>%
add_residuals(model_1) %>%
select(-alcohol, -quality)
ggpairs(wine_resid_2)
ggpairs(wine_resid_2, columns = c(11, 12))
ggpairs(wine_resid_2)
wine_resid_2 <- wine_total %>%
add_residuals(model_1) %>%
select(-alcohol, -quality, -chlorides, -total_sulfur_dioxide, -is_red)
ggpairs(wine_resid_2)
model_2 <- lm(quality ~ alcohol + volatile_acidity, wine_total)
autoplot(model_2)
summary(model_2)
# first start with the transformed variables
wine_resid_2 <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, volatile_acidity, alcohol, quality, is_red) %>%
add_residuals(model_1) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_2)
# get model residuals and see what variables will help explain remaining variation
# first start with the transformed variables
wine_resid_2 <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, volatile_acidity, alcohol, quality, is_red) %>%
add_residuals(model_1) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_2)
# free_so2 is highest, but only 0.18, lets check the other non-transformed first
# first start with the transformed variables
wine_resid_2 <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, free_sulfur_dioxide, volatile_acidity, alcohol, quality, is_red) %>%
add_residuals(model_1) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_2)
# first start with the transformed variables
wine_resid_2 <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, volatile_acidity, alcohol, quality, is_red) %>%
add_residuals(model_1) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_2)
wine_resid_2
model_3 <- lm(quality ~ alcohol + log(free_sulfur_dioxide) + volatile_acidity, wine_total)
autoplot(model_3)
summary(model_3)
# first start with the transformed variables
wine_resid_2 <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, volatile_acidity, alcohol, quality, is_red) %>%
add_residuals(model_2) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_2)
#let's check the other variables:
wine_resid_2_rest <- wine_total %>%
add_residuals(model_2) %>%
select(-quality, -alcohol, -volatile_acidity, -chlorides, -free_sulfur_dioxide,
-total_sulfur_dioxide, -residual_sugar)
#let's check the other variables:
wine_resid_2_rest <- wine_total %>%
add_residuals(model_2) %>%
select(-quality, -alcohol, -volatile_acidity, -chlorides, -free_sulfur_dioxide,
-total_sulfur_dioxide, -residual_sugar)
ggpairs(wine_resid_2_rest)
wine_total %>%
ggplot(aes(x = is_red, y = quality)) +
geom_boxplot()
model_3 <- lm(quality ~ alcohol + volatile_acidity + is_red, wine_total)
model_3 <- lm(quality ~ alcohol + volatile_acidity + is_red, wine_total)
autoplot(model_3)
summary(model_3)
model_4 <- lm(quality ~ alcohol + volatile_acidity + factor(is_red), wine_total)
summary(model_4)
anova(model_2, model_3)
# first start with the transformed variables
wine_resid_2 <- wine_total_transform %>%
select(ln_residual_sugar:ln_free_so2, volatile_acidity, alcohol, quality, is_red) %>%
add_residuals(model_2) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_2)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_3) %>%
select(-quality, -alcohol, -volatile_acidity, -chlorides, -free_sulfur_dioxide,
-total_sulfur_dioxide, -residual_sugar)
ggpairs(wine_resid_3)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_3) %>%
select(-quality, -alcohol, -volatile_acidity, -chlorides, -free_sulfur_dioxide,
-total_sulfur_dioxide, -residual_sugar)
ggpairs(wine_resid_3)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_3) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_3)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_2) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_3)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_3) %>%
select(-quality, -alcohol, -volatile_acidity)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_3) %>%
select(-quality, -alcohol, -volatile_acidity, -is_red)
ggpairs(wine_resid_3)
#let's check the other variables:
wine_resid_2_rest <- wine_total %>%
add_residuals(model_2) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_2_rest)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_3) %>%
select(-quality, -alcohol, -volatile_acidity)
ggpairs(wine_resid_3)
wine_resid_2_rest %>%
ggplot() +
aes(x = is_red, y = resid) +
geom_boxplot()
wine_resid_2_rest %>%
ggplot() +
aes(x = is_red, y = total_suphur_dioxide) +
geom_boxplot()
wine_resid_2_rest %>%
ggplot() +
aes(x = is_red, y = total_sulphur_dioxide) +
geom_boxplot()
wine_resid_2_rest %>%
ggplot() +
aes(x = is_red, y = total_sulfur_dioxide) +
geom_boxplot()
model_3 <- lm(quality ~ alcohol + volatile_acidity + is_red, wine_total)
summary(model_3)
# get model residuals and see what variables will help explain remaining variation
wine_resid_3 <- wine_total %>%
add_residuals(model_3) %>%
select(-quality, -alcohol, -volatile_acidity, -is_red)
ggpairs(wine_resid_3)
wine_resid_4 <- wine_total %>%
add_residuals(model_3) %>%
mutate(ln_sugar = log(residual_sugar)) %>%
select(-quality, -alcohol, -volatile_acidity, -is_red)
ggpairs(wine_resid_4)
wine_resid_4 <- wine_total %>%
add_residuals(model_3) %>%
mutate(ln_sugar = log(residual_sugar)) %>%
select(-quality, -alcohol, -volatile_acidity, -is_red)
ggpairs(wine_resid_4)
model_4 <- lm(quality ~ alcohol + volatile_acidity + is_red + residual_sugar, wine_total)
summary(model_4)
wine_total %>%
ggplot(aes(x = alcohol, y = quality, colour = is_red)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# volatile_acidity and wine type
wine_total %>%
ggplot(aes(x = volatile_acidity, y = quality, colour = is_red)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# volatile_acidity and wine type
wine_total %>%
ggplot(aes(x = is_red, y = quality, colour = is_red)) +
geom_boxplot()
# check for potential interaction alcohol and volatile_acidity
coplot(quality ~ alcohol | volatile_acidity, data = wine_total)
# check for potential interaction alcohol and volatile_acidity
coplot(quality ~ alcohol | volatile_acidity,
rows = 1,
panel = function(x, y, ...){
points(x, y)
abline(lm(y ~ x), col = "blue")
},
data = wine_total)
# let's check scores of the 3 models made:
AIC(model_1)
AIC(model_2)
AIC(model_3)
BIC(model_1)
BIC(model_2)
BIC(model_3)
test_white_2 <- test_white %>%
mutate(is_red = FALSE) %>%
select(-wine_id)
test_red_2 <- test_red %>%
mutate(is_red = TRUE) %>%
select(-wine_id)
wine_test_total <-
bind_rows(test_white_2, test_red_2) %>%
select(-region)
predictions_test_mod2 <- wine_test_total %>%
add_predictions(model_2) %>%
select(quality, pred)
predictions_test_mod3 <- wine_test_total %>%
add_predictions(model_3) %>%
select(quality, pred)
#calculate mean squared error for both:
#model_2
mse_model2 <- mean((predictions_test_mod2$pred - wine_test_total$quality)**2)
#model_3
mse_model3 <- mean((predictions_test_mod3$pred - wine_test_total$quality)**2)
#result
mse_model2
# 0.6965714
mse_model3
predictions_train_mod3 <- wine_total %>%
add_predictions(model_3) %>%
select(quality, pred)
mse_train_model3 <- mean((predictions_train_mod3$pred - wine_total$quality)**2)
mse_train_model3
library(leaps)
library(leaps)
regsubsets_forward <- regsubsets(quality ~ ., data = wine_total, nvmax = 6, method = 'forward')
summary(regsubsets_forward)
plot(regsubsets_forward, scale = "adjr2")
library(tidyverse)
library(GGally)
library(modelr)
library(skimr)
library(ggfortify)
white_wine <- read_csv("data/wine_quality_white.csv")
# Same for white:
n_data_white <- nrow(white_wine)
test_prop <- 0.1
test_index_white <- sample(1:n_data_white, size = n_data_white * test_prop)
test_white <- slice(white_wine, test_index_white)
train_white <- slice(white_wine, -test_index_white)
skim(train_white) %>% view()
head(white_wine)
# what influences target (wine quality)?
train_white %>%
select(quality, 1:7)
# what influences target (wine quality)?
train_white %>%
select(quality, 2:7) %>%
ggpairs()
# graph: quality-chlorides is almost a normal distribution. You could think of transforming by
# getting the absolute distance to the mean for each point.
train_white %>%
select(quality, 8:14) %>%
ggpairs(progress = FALSE)
train_white_fe <- train_white %>%
mutate(across(where(is.numeric),
.fns = ~log(1 + .x)))
train_white_fe
train_white_fe <- train_white %>%
mutate(across(where(is.numeric),
.fns = ~log(1 + .x),
.names = "log_{.col}"))
train_white_fe
train_white_fe <- train_white %>%
mutate(across(where(is.numeric),
.fns = ~log(1 + .x),
.names = "log_{.col}")) %>%
mutate(chlorides_diff_to_mean = chlorides - mean(chlorides),
.after = chlorides) # to shift the distribution to be centred around 0
train_white_fe
train_white_fe <- train_white %>%
mutate(across(where(is.numeric),
.fns = ~log(1 + .x),
.names = "log_{.col}")) %>%
mutate(chlorides_diff_to_mean = chlorides - mean(chlorides),
.after = chlorides) %>%  # to shift the distribution to be centred around 0
# use .names and {.col} to rename all with log as prefix
mutate(chlorides_abs_diff_to_mean = abs(chlorides_diff_to_mean),
.after = chlorides_diff_to_mean)
train_white_fe
# what does this now look like?
ggplot(train_white_fe) +
aes(x = chlorides_diff_to_mean, y = quality) +
geom_point() +
geom_smooth(method = "lm")
# what does this now look like?
ggplot(train_white_fe) +
aes(x = chlorides_abs_diff_to_mean, y = quality) +
geom_point() +
geom_smooth(method = "lm")
train_white_fe <- train_white %>%
select(-wine_id)
train_white_fe <- train_white %>%
select(-wine_id) %>%
mutate(across(where(is.numeric),
.fns = ~log(1 + .x),
.names = "log_{.col}")) %>%
mutate(chlorides_diff_to_mean = chlorides - mean(chlorides),
.after = chlorides) %>%  # to shift the distribution to be centred around 0
# use .names and {.col} to rename all with log as prefix
mutate(chlorides_abs_diff_to_mean = abs(chlorides_diff_to_mean),
.after = chlorides_diff_to_mean)
train_white_fe %>%
select(quality, starts_with("log_")) %>%
select(1:8) %>%
select(starts_with("log"), quality) %>%
ggpairs()
train_white_fe %>%
select(quality, starts_with("log_")) %>%
select(1:8) %>%
select(starts_with("log"), quality) %>%
ggpairs()
mod1 <- lm(quality ~ alcohol, data = train_white_fe)
mod1 <- lm(quality ~ alcohol, data = train_white_fe)
summary(mod1)
mod1 <- lm(quality ~ log_alcohol, data = train_white_fe)
summary(mod1)
mod1 <- lm(quality ~ alcohol, data = train_white_fe)
mod1 <- lm(quality ~ alcohol, data = train_white_fe)
summary(mod1)
train_white_fe %>%
add_predictions(mod1) %>%
add_residuals(mod1)
train_white_fe %>%
add_predictions(mod1) %>%
add_residuals(mod1) %>%
select(1:6, resid) %>%
ggpairs()
ggsave("mod1_resid.png", height = 10, width = 10)
mod2 <- lm(quality ~ alcohol + volatile_acidity, data = train_white_fe)
summary(mod2)
# just trying something to tackle a question:
mod2 <- lm(quality ~ alcohol + volatile_acidity + log_volatile_acidity, data = train_white_fe)
summary(mod2)
# by adding the log version, the non-log is suddenly no longer significant
# so it is telling: don't add both!
mod3 <- lm(quality ~ alcohol + log_volatile_acidity, data = train_white_fe)
summary(mod3)
