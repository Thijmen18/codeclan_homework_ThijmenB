house_prices <- read_csv("data/kc_house_data.csv")
library(skimr)
head(house_prices)
# columns date, id, sqft_living, sqft_loft and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living, -sqft_lot)
house_tidy
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode)
house_tidy
house_tidy %>%
distinct(waterfront)
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront))
house_tidy
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = is_logical(yr_renovated)) #%>%
house_tidy
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) #%>%
house_tidy
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) %>%
select(-yr_renovated)
house_tidy
house_tidy %>%
distinct(view)
house_tidy %>%
distinct(condition)
house_tidy %>%
distinct(grade)
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) %>%
select(-yr_renovated) %>%
# Variables, 'view', 'condition' and 'grade' can be seen as interval data (have an order, numerical)
mutate(view = is_integer(view),
condition = is_integer(condition),
grade = is_integer(grade))
house_tidy
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) %>%
select(-yr_renovated) %>%
# Variables, 'view', 'condition' and 'grade' can be seen as interval data (have an order, numerical)
mutate(view = is.interval(view),
condition = is.interval(condition),
grade = is.interval(grade))
house_tidy
house_prices
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) %>%
select(-yr_renovated) %>%
# Variables, 'view', 'condition' and 'grade' can be seen as ordinal data.
# they are representing non-mathematical ideas (eventhough written here as number)
mutate(view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
house_tidy
alias(lm(price ~ ., data = house_tidy))
house_tidy <- house_tidy %>%
select(-sqft_basement)
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = is_logical(waterfront)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) %>%
select(-yr_renovated) %>%
# Variables, 'view', 'condition' and 'grade' can be seen as ordinal data.
# they are representing non-mathematical ideas (eventhough written here as number)
mutate(view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
house_tidy_2 <- house_tidy %>%
select(-sqft_basement)
alias(lm(price ~ ., data = house_tidy_2))
house_tidy_2
house_tidy_2 %>%
distinct(waterfront)
house_prices %>%
distinct(waterfront)
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = if_else(waterfront > 0, TRUE, FALSE)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) %>%
select(-yr_renovated) %>%
# Variables, 'view', 'condition' and 'grade' can be seen as ordinal data.
# they are representing non-mathematical ideas (eventhough written here as number)
mutate(view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
house_tidy
alias(lm(price ~ ., data = house_tidy))
house_tidy_2 <- house_tidy %>%
select(-sqft_basement)
alias(lm(price ~ ., data = house_tidy_2))
# Numeric
house_tidy_numeric <- house_tidy_2 %>%
select_if(is.numeric)
# non-numeric
house_tidy_nonnum <- house_tidy_2 %>%
select_if(!is.numeric)
# non-numeric
house_tidy_nonnum <- house_tidy_2 %>%
select_if(~!is.numeric(.))
house_tidy_nonnum
house_tidy_numeric
# add price column to the non-numeric data
house_tidy_nonnum$price <- house_tidy_2$price
house_tidy_nonnum
ggpairs(house_tidy_numeric)
model_1 <- lm(price ~ sqft_living, house_tidy_2)
autoplot(model_1)
autoplot(model_1)
summary(model_1)
house_tidy_numeric_remaining_resid <- house_tidy_2 %>%
add_residuals(model_1) %>%
select(-c("price", "sqft_living"))
library(modelr)
house_tidy_numeric_remaining_resid <- house_tidy_2 %>%
add_residuals(model_1) %>%
select(-c("price", "sqft_living"))
ggpairs(house_tidy_numeric_remaining_resid)
house_tidy_numeric_remaining_resid <- house_tidy_numeric %>%
add_residuals(model_1) %>%
select(-c("price", "sqft_living"))
ggpairs(house_tidy_numeric_remaining_resid)
model_2 <- lm(price ~ sqft_living + latitude, house_tidy_2)
model_2 <- lm(price ~ sqft_living + lat, house_tidy_2)
autoplot(model_2)
summary(model_2)
house_tidy_numeric_remaining_resid <- house_tidy_numeric %>%
add_residuals(model_2) %>%
select(-c("price", "sqft_living", "lat"))
ggpairs(house_tidy_numeric_remaining_resid)
ggpairs(house_tidy_nonnum)
model_3 <- lm(price ~ sqft_living + lat + type, house_tidy_2)
model_3 <- lm(price ~ sqft_living + lat + grade, house_tidy_2)
autoplot(model_3)
summary(model_3)
house_tidy_numeric_remaining_resid <- house_tidy_nonnum %>%
add_residuals(model_3) %>%
select(-c("price", "sqft_living", "lat", "grade"))
house_tidy_numeric_remaining_resid <- house_tidy_nonnum %>%
add_residuals(model_3) %>%
select(-c("price", "grade"))
house_tidy_numeric_remaining_resid <- house_tidy_nonnum %>%
add_residuals(model_3) %>%
select(-c("price", "grade"))
house_tidy_nonnumeric_remaining_resid <- house_tidy_nonnum %>%
add_residuals(model_3) %>%
select(-c("price", "grade"))
house_tidy_nonnum
house_tidy_nonnumeric_remaining_resid <- house_tidy_nonnum %>%
add_residuals(model_3) %>%
select(-c("price", "grade"))
house_tidy_remaining_resid <- house_tidy_2 %>%
add_residuals(model_3) %>%
select(-c("price", "grade", "sqft_living", "lat"))
ggpairs(house_tidy_remaining_resid)
house_tidy_nonnumeric_remaining_resid <- house_tidy_nonnum %>%
add_residuals(model_3) %>%
select(-c("price", "grade"))
house_tidy_remaining_resid <- house_tidy_2 %>%
add_residuals(model_3) %>%
select(-c("price", "grade", "sqft_living", "lat"))
ggpairs(house_tidy_remaining_resid)
ggpairs(house_tidy_nonnum)
ggpairs(house_tidy_remaining_resid)
anova(model_2, model_3)
colnames(house_tidy_remaining_resid)
i
ggpairs(house_tidy_remaining_resid)
colnames(house_tidy_remaining_resid)
model_4 <- lm(price ~ sqft_living + lat + grade + year_built, house_tidy_2)
model_4 <- lm(price ~ sqft_living + lat + grade + yr_built, house_tidy_2)
autoplot(model_4)
summary(model_4)
library(tidyverse)
library(fastDummies)
library(mosaicData)
library(tidyverse)
library(janitor)
library(GGally)
library(ggfortify)
library(mosaic)
library(skimr)
house_prices <- read_csv("data/kc_house_data.csv")
# columns date, id, sqft_living15, sqft_lot15 and zipcode non informative
house_tidy <- house_prices %>%
select(-id, -date, -sqft_living15, -sqft_lot15, -zipcode) %>%
#waterfront is a logical, TRUE/FALSE so lets convert:
mutate(waterfront = if_else(waterfront > 0, TRUE, FALSE)) %>%
#lets convert yr_renovated into a logical also, to see if renovation has a effect
mutate(renovated = if_else(yr_renovated > 0, TRUE, FALSE)) %>%
select(-yr_renovated) %>%
# Variables, 'view', 'condition' and 'grade' can be seen as ordinal data.
# they are representing non-mathematical ideas (eventhough written here as number)
mutate(view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
# start checking correlations for numeric only first, than non-numeric..
# to keep things manageable!
# Numeric
house_tidy_numeric <- house_tidy_2 %>%
select_if(is.numeric)
house_tidy_2 <- house_tidy %>%
select(-sqft_basement)
# start checking correlations for numeric only first, than non-numeric..
# to keep things manageable!
# Numeric
house_tidy_numeric <- house_tidy_2 %>%
select_if(is.numeric)
# non-numeric
house_tidy_nonnum <- house_tidy_2 %>%
select_if(~!is.numeric(.))
# add price column to the non-numeric data
house_tidy_nonnum$price <- house_tidy_2$price
model_1 <- lm(price ~ sqft_living, house_tidy_2)
autoplot(model_1)
summary(model_1)
# Residual standard error: 261500
# Multiple R-squared:  0.4929
# significant relation
library(modelr)
house_tidy_numeric_remaining_resid <- house_tidy_numeric %>%
add_residuals(model_1) %>%
select(-c("price", "sqft_living"))
ggpairs(house_tidy_numeric_remaining_resid)
model_2 <- lm(price ~ sqft_living + lat, house_tidy_2)
model_3 <- lm(price ~ sqft_living + lat + grade, house_tidy_2)
model_4 <- lm(price ~ sqft_living + lat + grade + yr_built, house_tidy_2)
model_5 <- lm(price ~ sqft_living + lat + grade + yr_built + yr_built:grade, house_tidy_2)
autoplot(model_5)
summary(model_5)
autoplot(model_4)
summary(model_4)
library(relaimpo)
calc.relimp(model_4, type = "lmg", rela = TRUE)
model.matrix(model_3)
model.matrix(model_2)
library(tidyverse)
library(fastDummies)
library(mosaicData)
library(tidyverse)
library(janitor)
library(GGally)
library(ggfortify)
library(mosaic)
library(skimr)
houses <- read_csv("data/kc_house_data.csv")
houses %>%
ggplot(aes(x = price)) +
geom_historgram() +
scale_x_continuous(trans = "log10")
houses %>%
ggplot(aes(x = price)) +
geom_histogram() +
scale_x_continuous(trans = "log10")
houses %>%
ggplot(aes(x = grade, y = price)) +
geom_point()
houses %>%
ggplot(aes(x = as.factor(grade), y = price)) +
geom_boxplot()
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
select(-"yr_renovated") %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
#select(-"yr_renovated")
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
houses <- read_csv("data/kc_house_data.csv")
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
#select(-"yr_renovated")
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
houses %>%
ggplot(aes(x = price)) +
geom_histogram() +
scale_x_continuous(trans = "log10")
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
select(-"yr_renovated") %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
colnames(houses)
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
select(-yr_renovated) %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
colnames(houses)
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
select(-yr_renovated) %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
library(tidyverse)
library(fastDummies)
library(mosaicData)
library(tidyverse)
library(janitor)
library(GGally)
library(ggfortify)
library(mosaic)
library(skimr)
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
select(-yr_renovated) %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) #%>%
library(tidyverse)
library(fastDummies)
library(mosaicData)
library(tidyverse)
library(janitor)
library(GGally)
library(ggfortify)
library(mosaic)
library(skimr)
houses <- read_csv("data/kc_house_data.csv")
# e.g. for price:
houses %>%
ggplot(aes(x = price)) +
geom_histogram() +
scale_x_continuous(trans = "log10")
houses_logged <- houses %>%
mutate(ln_house_price = log(price))
# e.g. for grade:
# grade is now numerical, but we have too little information to assume
# that grade 10 is twice as good as 5.
houses %>%
ggplot(aes(x = grade, y = price)) +
geom_point()
# If we treat it as a categoric, we than give the model one grade "as one arm"
# You model than gets a separate coefficient for every category (= every grade)
# which is good, because each grade represents something else, a different grade.
houses %>%
ggplot(aes(x = as.factor(grade), y = price)) +
geom_boxplot()
summary(lm())
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
select(-yr_renovated) %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
houses_tidy_numeric <- houses_tidy %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- houses_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- houses_tidy$price
ggpairs(houses_tidy_numeric)
model <- lm(price ~ sqft_above, houses_tidy)
summary(model)
model_2 <- lm(price ~ sqft_above + grade, houses_tidy)
summary(model_2)
anova(model, model_2)
houses_tidy <- houses_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, 7, grade)))
houses_tidy <- houses_tidy %>%
mutate(grade_grouped = as.factor(if.else(as.numeric(grade) < 8, 7, grade)))
houses_tidy <- houses_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, 7, grade)))
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, 7, as.numeric(grade)))
model_3 <- lm(price ~ sqft_above + grade, houses_tidy)
model_3 <- lm(price ~ sqft_above + grade, houses_tidy)
summary(model_3)
houses_tidy <- houses_tidy %>%
model_3 <- lm(price ~ sqft_above + grade, houses_tidy)
library(tidyverse)
library(fastDummies)
library(mosaicData)
library(tidyverse)
library(janitor)
library(GGally)
library(ggfortify)
library(mosaic)
library(skimr)
houses <- read_csv("data/kc_house_data.csv")
# e.g. for price:
houses %>%
ggplot(aes(x = price)) +
geom_histogram() +
scale_x_continuous(trans = "log10")
houses_logged <- houses %>%
mutate(ln_house_price = log(price))
# e.g. for grade:
# grade is now numerical, but we have too little information to assume
# that grade 10 is twice as good as 5.
houses %>%
ggplot(aes(x = grade, y = price)) +
geom_point()
# If we treat it as a categoric, we than give the model one grade "as one arm"
# You model than gets a separate coefficient for every category (= every grade)
# which is good, because each grade represents something else, a different grade.
houses %>%
ggplot(aes(x = as.factor(grade), y = price)) +
geom_boxplot()
summary(lm())
houses_tidy <- houses_tidy %>%
model_3 <- lm(price ~ sqft_above + grade, houses_tidy)
houses_tidy <- houses %>%
select(-c("id", "date", "sqft_living15", "sqft_lot15", "zipcode")) %>%
mutate(waterfront = as.logical(waterfront)) %>%
mutate(renovated = yr_renovated != 0) %>%
select(-yr_renovated) %>%
mutate(view = as_factor(view)) %>%
mutate(condition = as_factor(condition)) %>%
mutate(grade = as_factor(grade))
#splitting data in numeric and non-numeric
houses_tidy_numeric <- houses_tidy %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- houses_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- houses_tidy$price
model <- lm(price ~ sqft_above, houses_tidy)
model_2 <- lm(price ~ sqft_above + grade, houses_tidy)
summary(model)
summary(model_2)
houses_tidy <- houses_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, 7, as.numeric(grade)))
model_3 <- lm(price ~ sqft_above + grade, houses_tidy)
houses_tidy <- houses_tidy %>%
model_3 <- lm(price ~ sqft_above + grade, houses_tidy)
houses_tidy <- houses_tidy %>%
houses_tidy <- houses_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, 7, as.numeric(grade))))
plot(model_2)
library(modelr)
model_2$residuals
houses_model <- houses_tidy %>%
add_residuals(model_2)
houses_model
summary(model_2)
summary(model)
summary(model_2)
summary(model)
